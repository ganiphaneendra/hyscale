# Build workflow gets auto triggered upon code merge to master or release* branches

name: Build

on:
  push:
    paths-ignore:
    - .gitignore
    - docs/images/*
    - docs/*
    - LICENSE
    - README.md
    branches: 
    - master
    - release/HyScale*
  create:
    branch:
    - release/HyScale*

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Build Images for dev
      if: github.ref == 'refs/heads/master'
      run: |
          ./scripts/build_image.sh
      env:
        DOCKER_REPO: 'hyscaledev'
        MAVEN_USERNAME: ${{ secrets.HYS_OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.HYS_OSSRH_TOKEN }}
        GPG_KEY_ARG: ${{ secrets.HYS_GPG_KEY }}
        GPG_PASSPHRASE: ${{ secrets.HYS_GPG_PASSPHRASE }}

    - name: Build Images for release
      run: |
          if [[ "x`echo ${GITHUB_REF}`" == *"release/HyScale"* ]]
          then
            ./scripts/build_image.sh
          fi
      env:
        DOCKER_REPO: 'hyscale'
        MAVEN_USERNAME: ${{ secrets.HYS_OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.HYS_OSSRH_TOKEN }}
        GPG_KEY_ARG: ${{ secrets.HYS_GPG_KEY }}
        GPG_PASSPHRASE: ${{ secrets.HYS_GPG_PASSPHRASE }}

    - uses: azure/container-scan@v0
      if: github.ref == 'refs/heads/master' || contains(github.ref, 'release/HyScale')
      with:
        image-name: hyscale:latest

    - name: Publish Images and Hyscale Binary for DEV
      if: github.ref == 'refs/heads/master'
      run: |
          ./scripts/publish_artifacts.sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.HYS_DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.HYS_DEV_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        AWS_S3_BUCKET: ${{ secrets.HYS_DEV_AWS_S3_BUCKET }}
        DOCKER_USERNAME: ${{ secrets.HYS_DEV_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.HYS_DEV_DOCKER_PASSWORD }}
        DOCKER_REPO: 'hyscaledev'

    - name: Publish Images and Hyscale Binary for Release
      run: |
          if [[ "x`echo ${GITHUB_REF}`" == *"release/HyScale"* ]]
          then
            ./scripts/publish_artifacts.sh
          fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.HYS_STABLE_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.HYS_STABLE_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        AWS_S3_BUCKET: ${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}
        DOCKER_USERNAME: ${{ secrets.HYS_STABLE_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.HYS_STABLE_DOCKER_PASSWORD }}
        DOCKER_REPO: 'hyscale'

    #If branch is release, the upload the hyscale binary to DEV latest
    - name: Release Pointing to the Latest of DEV
      run: |
          if [[ "x`echo ${GITHUB_REF}`" == *"release/HyScale"* ]]
          then
            cd invoker
            scripts="hyscale-linux-amd64 hyscale-windows-amd64.exe hyscale-darwin-amd64 hyscale.jar"
            upload_to="hyscale win/hyscale.exe mac/hyscale hyscale.jar"
            set -- $upload_to
            for script in $scripts
            do
              aws s3 cp $script s3://$AWS_S3_BUCKET/hyscale/release/latest/$1
              aws s3api put-object-tagging --bucket $AWS_S3_BUCKET  --key hyscale/release/latest/$1 --tagging 'TagSet=[{Key=hyscalepubliccontent,Value=true}]'
              shift
            done
          fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.HYS_DEV_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.HYS_DEV_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        AWS_S3_BUCKET: ${{ secrets.HYS_DEV_AWS_S3_BUCKET }}

    - name: URL to Download Hyscale Artifact
      run: |
          if [ $(echo ${GITHUB_REF##*/}) == "master" ]
          then
            echo -en "CHANGE LOG: \n$(git log -1 --pretty=format:"%s") \n-------------------------------------------------------- \n" >> hyscale_version.txt
            echo -en "Hyscale tool Build Completed Successfully with $(echo ${GITHUB_REF##*/})\n\nLinux Binary can be downloaded using \ncurl -sSL ${{ secrets.HYS_DEV_BINARY_URL }} | HYS_VERSION=$IMAGE_VERSION  bash \n\nMAC Binary can be downloaded using \nwget https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_DEV_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/mac/hyscale \n\nWindows Binary can be downloaded using \nInvoke-WebRequest -Uri https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_DEV_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/win/hyscale.exe -OutFile hyscale.exe \n\nJAR can be downloaded using \nwget https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_DEV_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/hyscale.jar" >> hyscale_version.txt
          elif [[ "x`echo ${GITHUB_REF}`" == *"release/HyScale"* ]]
          then
            echo -en "Hyscale tool Build Completed Successfully with $(echo ${GITHUB_REF##*/})\n\nLinux Binary can be downloaded using \ncurl -sSL ${{ secrets.HYS_STABLE_BINARY_URL }} | HYS_VERSION=$IMAGE_VERSION  bash \n\nMAC Binary can be downloaded using \nwget https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/mac/hyscale \n\nWindows Binary can be downloaded using \nInvoke-WebRequest -Uri https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/win/hyscale.exe -OutFile hyscale.exe \n\nJAR can be downloaded using \nwget https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}/hyscale/release/$IMAGE_VERSION/hyscale.jar" >> hyscale_version.txt
          else
            echo -en "Hyscale tool Build triggered but nothing is built or published as the branch is $(echo ${GITHUB_REF##*/})" >> hyscale_version.txt
          fi

    - name: SendGrid Action for Build Failure
      if: ${{ failure() }}
      uses: peter-evans/sendgrid-action@v1
      env:
        SENDGRID_API_KEY: ${{ secrets.HYS_SENDGRID_API_KEY }}
        SCRIPT_FILEPATH: .github/failure_sendgrid.js

    - name: SendGrid Action for Successful Build
      uses: peter-evans/sendgrid-action@v1
      env:
        SENDGRID_API_KEY: ${{ secrets.HYS_SENDGRID_API_KEY }}
